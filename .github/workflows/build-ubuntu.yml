name: Ubuntu CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-ubuntu:
    name: Test on Ubuntu ${{ matrix.ubuntu-version }}
    runs-on: ubuntu-${{ matrix.ubuntu-version }}

    strategy:
      matrix:
        ubuntu-version: [22.04, 24.04]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.ubuntu-version }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.ubuntu-version }}-
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --no-default-features -- -D warnings

    - name: Build (default features)
      run: cargo build --no-default-features

    - name: Build (with CLI UI)
      run: cargo build --features cli-ui

    - name: Run tests (default features)
      run: cargo test --no-default-features --lib
      continue-on-error: true

    - name: Run tests (with CLI UI)
      run: cargo test --features cli-ui --lib
      continue-on-error: true

    - name: Build release binary
      run: cargo build --release --no-default-features

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: codl3-zksync-ubuntu-${{ matrix.ubuntu-version }}
        path: target/release/codl3-zksync
        if-no-files-found: warn

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit --ignore RUSTSEC-2021-0145
